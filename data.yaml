title: |
  Improving LaCAM for Scalable Eventually Optimal Multi-Agent Pathfinding

# meta-tag
description: |-
  LaCAM* algorithm for multi-agent path finding
site_name: research projects | Keisuke Okumura
site_url: https://kei18.github.io/lacam2/
thumbnail: thumbnail
twitter: _kei18

authors:
  - name: Keisuke Okumura
    url: https://kei18.github.io/
    affiliation: |
      National Institute of Advanced Technology and Science (AIST) / University of Cambridge

topLinks:
  - name: |
      paper: IJCAI-23 (in press)
    url: https://arxiv.org/abs/2305.03632

headerImage: concept
headerDescription: |
  the original image by <a href="https://pixabay.com/users/openclipart-vectors-30363/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=2027200">OpenClipart-Vectors</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=2027200">Pixabay</a>

subLinks:
  - name: code
    url: https://github.com/Kei18/lacam2

otherLinks:
  - name: LaCAM (AAAI-23)
    url: https://kei18.github.io/lacam/
  - name: LaCAM3
    url: https://kei18.github.io/lacam3/
  - name: PIBT (AIJ-22)
    url: https://kei18.github.io/pibt2/
  - name: mapf-visualizer
    url: https://github.com/Kei18/mapf-visualizer


abstract: |
  <p>
  This study extends the recently-developed LaCAM algorithm for multi-agent pathfinding (MAPF).
  LaCAM is a sub-optimal search-based algorithm that uses lazy successor generation, dramatically reducing the planning effort.
  We introduce two enhancements.
  First, we present its <span class="text-danger">anytime version called LaCAM*</span> which eventually converges to optima, provided solution costs are accumulated transition costs.
  Second, we <span class="text-danger">improve the successor generation</span> to quickly obtain initial solutions.
  Exhaustive experiments support their utility.
  For instance, LaCAM* sub-optimally solved 99% of the instances retrieved from the MAPF benchmark, where the number of agents varied up to a thousand, within ten seconds on a standard desktop PC, while ensuring eventual convergence to optima;
  developing a new horizon of MAPF algorithms.
  </p>

performance:
  image: performance
  description: |
    Figure 1: Performance on the MAPF benchmark.
    Upper: The number of solved instances among 13,900 instances comprising 33 four-connected grid maps, retrieved from the MAPF benchmark.
    The size of agents varies up to 1,000.
    '-f,' '-m,' and '-l' respectively mean that an algorithm tries to minimize flowtime, makespan, or sum-of-loss.
    LaCAM* uses data of initial solutions.
    Lower: Representative or state-of-the-art MAPF algorithms.
    ''solution cmp.'' means that an algorithm ensures to find solutions for solvable instances but it never identifies unsolvable ones.
    ''bnd. sub-opt.'' denotes a bounded sub-optimal algorithm.
    Their sub-optimality was set to five.

news:
  - body: |
      The follow-up work is out on arXiv
    url: https://kei18.github.io/lacam3/
    date: Aug. 2023
  - body: |
      The paper has been accepted to IJCAI-23!
    url: https://ijcai-23.org/
    date: Apr. 2023

# video:

# slides:
slides: https://speakerdeck.com/player/0294a6deacec477189b41e8eb2b9346b

citation: |-
  (in press)

  @inproceedings{okumura2023lacam2,
    title={Improving LaCAM for Scalable Eventually Optimal Multi-Agent Pathfinding},
    booktitle={Proceedings of the Thirty-First International Joint Conference on Artificial Intelligence (IJCAI)},
    year={2023},
    author={Okumura, Keisuke}
  }

contact: |-
  ko393 [at] cl.cam.ac.uk

copyright: Keisuke Okumura
